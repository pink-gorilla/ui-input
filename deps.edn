{:paths ["src"
         "resources" ; goldly-ext, css
         "target/node_modules" ; css from npm modules
         ]
 :deps
 {org.clojure/clojure    {:mvn/version "1.11.1"}
  org.pinkgorilla/pinkie {:mvn/version "0.3.17"} ; box
  }
 :aliases
  {; github ci  
   :build {:deps {io.github.clojure/tools.build {:mvn/version "0.9.6"}
                  slipset/deps-deploy {:mvn/version "0.2.1"}
                  babashka/fs {:mvn/version "0.0.5"}}
           :ns-default build}
   
  ; https://github.com/weavejester/cljfmt
  :cljfmt
  {:extra-deps {cljfmt/cljfmt {:mvn/version "RELEASE"}}
   :main-opts ["-m" "cljfmt.main" "check" "--indents" "cljfmt.edn"]}
  :cljfmt-fix
  {:extra-deps {cljfmt/cljfmt {:mvn/version "RELEASE"}}
   :main-opts ["-m" "cljfmt.main" "fix" "--indents" "cljfmt.edn"]}

 ; https://github.com/clj-kondo/clj-kondo/blob/master/doc/jvm.md
  :lint
  {:extra-deps {clj-kondo/clj-kondo {:mvn/version "RELEASE"}}
   :main-opts ["-m" "clj-kondo.main" "--lint" "src"]}

  :check
  {:extra-deps {athos/clj-check {:git/url "https://github.com/athos/clj-check.git"
                                 :sha "0ca84df1357d71429243b99908303f45a934654c"}}
   :main-opts ["-m" "clj-check.check"]}

  ; ci

  :goldly-build ; ci only
  {:extra-paths ["target/webly" ; to include the sci-bindings info
                 "demo/src"
                 "demo/resources"]
   :extra-deps {org.pinkgorilla/goldly {:mvn/version "0.4.635"}
                }
   :exec-fn goldly.app.build/goldly-build
   :exec-args {:profile "npm-install"
               :config  ["webly/config.edn" "goldly/config.edn" "demo/config.edn"]}}

   ; for demo see README.md or go to "demo" folder and run aliases there.

;
  }}
